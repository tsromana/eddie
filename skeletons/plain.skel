%%%----------------------------------------------------------------------
%%% File    : SKEL-FILE
%%% Author  : SKEL-AUTHOR-2
%%% Created : SKEL-CREATED
%%% Purpose : SKEL-PURPOSE
%%%
%%% The contents of this file are subject to the Erlang Public License
%%% License, Version 1.0, (the "License"); you may not use this file
%%% except in compliance with the License. You may obtain a copy of the
%%% License at http://www.eddieware.org/EPL
%%%
%%% Software distributed under the License is distributed on an "AS IS"
%%% basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
%%% the License for the specific language governing rights and limitations
%%% under the License.
%%%
%%% The Original Code is Eddie-0.83b1.
%%%
%%% The Initial Developer of the Original Code is Ericsson Telecom
%%% AB. Portions created by Ericsson are Copyright (C), 1998,1999 Ericsson
%%% Telecom AB. All Rights Reserved.
%%%
%%% Contributor(s): ______________________________________.
%%%----------------------------------------------------------------------
-id('$Id: plain.skel,v 1.1.1.1 2000/10/27 22:20:27 dredd Exp $ ').
-source('$Source: /cvsroot/eddie/eddie/skeletons/plain.skel,v $ ').
-revision('$Revision: 1.1.1.1 $ ').
-date('$Date: 2000/10/27 22:20:27 $ ').
-state('$State: Exp $ ').

%% External exports
-export([start/0]).
%% Internal exports
-export([init/1]).

start() ->
    spawn(?MODULE,init,[self()]).

init(Pid) ->
    process_flag(trap_exit,true),
    loop(Pid).

loop(Pid) ->
    receive
	Msg ->
	    io:fwrite("(~w:loop) got: ~p~n",[?MODULE,Msg]),
	    loop(Pid)
    end.


